<project name="fixengine" default="all" xmlns:ivy="antlib:org.apache.ivy.ant">
  <!-- Properties and paths -->
  <property name="lib.dir" value="lib"/>
  <property name="build" location="build"/>
  <property name="main.src" location="src"/>
  <property name="main.build" location="${build}/main"/>
  <property name="examples.src" location="examples"/>
  <property name="examples.build" location="${build}/examples"/>
  <property name="test.src" location="test"/>
  <property name="test.build" location="${build}/test"/>
  <property name="library" value="${basedir}/fixengine.jar"/>
  <path id="lib.path.id">
    <fileset dir="${lib.dir}" includes="*.jar"/>
  </path>
  <path id="main.path.id">
    <fileset dir="${lib.dir}" includes="*.jar"/>
    <pathelement location="${main.build}"/>
  </path>
  <path id="examples.path.id">
    <fileset dir="${lib.dir}"/>
    <pathelement location="${main.build}"/>
    <pathelement location="${examples.build}"/>
  </path>
  <path id="test.path.id">
    <path refid="lib.path.id"/>
    <pathelement location="${main.build}"/>
    <pathelement location="${test.build}"/>
  </path>
  <!-- Automatic installation of Ivy -->
  <property name="ivy.install.version" value="2.2.0"/>
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME"/>
  </condition>
  <property name="ivy.home" value="${user.home}/.ant"/>
  <property name="ivy.jar.dir" value="${ivy.home}/lib"/>
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
  <condition property="fixengine.session.store" value="memory">
    <not>
      <isset property="fixengine.session.store"/>
    </not>
  </condition>
  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}"/>
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
      dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>
  <target name="init-ivy" depends="download-ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    <ivy:retrieve/>
  </target>
  <target name="init-scala" depends="init-ivy">
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath refid="lib.path.id"/>
    </taskdef>
  </target>
  <!-- Bread and butter -->
  <target name="init" depends="init-scala">
    <mkdir dir="${main.build}"/>
    <mkdir dir="${examples.build}"/>
    <mkdir dir="${test.build}"/>
  </target>
  <target name="all" depends="compile-main, compile-test, compile-examples"/>
  <target name="compile-main" depends="init">
    <scalac srcdir="${main.src}" destdir="${main.build}" classpathref="main.path.id" deprecation="true">
      <include name="**/*.scala"/>
      <include name="**/*.java"/>
    </scalac>
    <javac srcdir="${main.src}" destdir="${main.build}" classpathref="main.path.id" debug="true" includeantruntime="false">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>
  <target name="compile-test" depends="compile-main">
    <scalac srcdir="${test.src}" destdir="${test.build}" classpathref="test.path.id" deprecation="true">
      <include name="**/*.scala"/>
      <include name="**/*.java"/>
    </scalac>
    <javac srcdir="${test.src}" destdir="${test.build}" classpathref="test.path.id" debug="true" includeantruntime="false">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>
  <target name="compile-examples" depends="compile-main">
    <javac srcdir="${examples.src}" destdir="${examples.build}" classpathref="examples.path.id" debug="true" includeantruntime="false">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>
  <target name="dist" depends="compile-main">
    <jar destfile="${library}" basedir="${main.build}"/>
  </target>
  <target name="test" depends="compile-test">
    <junit printsummary="no" haltonfailure="true" showoutput="true">
      <sysproperty key="fixengine.session.store" value="${fixengine.session.store}"/>
      <classpath refid="test.path.id"/>
      <batchtest>
        <formatter type="plain" usefile="false"/>
        <fileset dir="${test.build}">
          <include name="**/*Spec.class"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="clean">
    <delete dir="${build}"/>
    <delete file="${library}"/>
  </target>
  <target name="run-console" depends="compile-examples">
    <java classname="fixengine.examples.console.ConsoleClient">
      <classpath refid="examples.path.id"/>
    </java>
  </target>
</project>
